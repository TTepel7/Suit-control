import requests
import json

# –±–ª–æ–∫ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
HOST = "http://sandbox.rightech.io"
TOKEN = ""
# id –∞–≤—Ç–æ–º–∞—Ç–∞ —Å–∏–≥–Ω–∞–ª SOS
SOS_AUT=""
# id –º–æ–¥–µ–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—É—é—â–µ–µ –∑–∞—â–∏—Ç–Ω–æ–º—É –∫–æ—Å—Ç—é–º—É
SUIT_MODEL_ID=""

def get_suits_id():
    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ—Å—Ç—é–º–æ–≤
    try:
        url = HOST+"/api/v1/objects"
        objects = requests.get(url, headers={'Authorization': "Bearer "+TOKEN})
        suits = []
        for i in json.loads(objects.text):
            if(i['model'] == SUIT_MODEL_ID):
                temp = {}
                temp[i['name']] = i['_id']
                suits.append(temp)
        return suits
    except Exception:
        return None


def get_last_messages():
    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        url = HOST+"/api/v1/messages"
        messages = requests.get(url, headers={'Authorization': "Bearer "+TOKEN})
        return json.loads(messages.text)
    except Exception:
        return None


def set_read(id):
    # —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
    try:
        url = HOST+"/api/v1/messages/read/"+id
        requests.patch(url, headers={'Authorization': "Bearer "+TOKEN})
    except Exception:
        pass


def clear_history():
    # –æ—Ç—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        url = HOST+"/api/v1/messages/clear"
        requests.delete(url, headers={'Authorization': "Bearer "+TOKEN})
    except Exception:
        pass

def switch_suit(id):
    # –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–æ—Å—Ç—é–º–∞
    try:
        url = HOST+"/api/v1/objects/"+id
        suit = requests.get(url, headers={'Authorization': "Bearer "+TOKEN})
        suit_json = json.loads(suit.text)

        suit = not suit_json['processedState']['active_state']

        url = HOST+"/api/v1/objects/"+id+"/bot/state"
        data = {"active_state": suit}
        requests.post(url, headers={'Authorization': "Bearer "+TOKEN}, data=data)
        return suit
    except Exception:
        return None


def send_sos():
    # –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∞ SOS
    try:
        url = HOST+"/api/v1/automatons/"+SOS_AUT+"/start"
        requests.post(url, headers={'Authorization': "Bearer "+TOKEN})
    except Exception:
        return None

def get_sos_info(id):
    # —Å–æ—Å—Ç–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞ SOS
    try:
        url = HOST+"/api/v1/objects/"+id
        suit = requests.get(url, headers={'Authorization': "Bearer "+TOKEN})
        suit_json = json.loads(suit.text)
        sos_info = []
        sos_info.append("–°–æ—Ç—Ä—É–¥–Ω–∏–∫—É, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–º—É " +
                        suit_json['name']+", —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å!")
        sos_info.append("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:")
        sos_info.append("–®–∏—Ä–æ—Ç–∞ üåé = "+str(suit_json['processedState']['lat']))
        sos_info.append("–î–æ–ª–≥–æ—Ç–∞ üåç = "+str(suit_json['processedState']['lon']))
        sos_info.append("–í—ã—Å–æ—Ç–∞ üåè = "+str(suit_json['processedState']['alt']))
        sos_info.append("X üß≠ = "+str(suit_json['processedState']['x']))
        sos_info.append("Y üß≠ = "+str(suit_json['processedState']['y']))
        sos_info.append("Z üß≠ = "+str(suit_json['processedState']['z']))
        return "\n".join(sos_info)
    except Exception:
        return "–û—à–∏–±–∫–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"


def get_stats(id):
    # —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–æ—Å—Ç—é–º–∞
    try:
        url = HOST+"/api/v1/objects/"+id
        suit = requests.get(url, headers={'Authorization': "Bearer "+TOKEN})
        suit_json = json.loads(suit.text)
        stats = []
        stats.append("–ó–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏–∏ üîã = " +
                    str(round((suit_json['processedState']['charge']), 1))+"%")
        stats.append("–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ ‚è≥ = " +
                    str(round(suit_json['processedState']['remaining_time'], 1))+" –º–∏–Ω—É—Ç")
        if suit_json['processedState']['active_state']:
            stats.append("–°—Ç–∞—Ç—É—Å –∫–æ—Å—Ç—é–º–∞ ü¶æ = –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚úÖ")
        else:
            stats.append("–°—Ç–∞—Ç—É—Å –∫–æ—Å—Ç—é–º–∞ ü¶æ = –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚ùå")
        stats.append("–®–∏—Ä–æ—Ç–∞ üåé = "+str(suit_json['processedState']['lat']))
        stats.append("–î–æ–ª–≥–æ—Ç–∞ üåç = "+str(suit_json['processedState']['lon']))
        stats.append("–í—ã—Å–æ—Ç–∞ üåè = "+str(suit_json['processedState']['alt']))
        stats.append("X üß≠ = "+str(suit_json['processedState']['x']))
        stats.append("Y üß≠ = "+str(suit_json['processedState']['y']))
        stats.append("Z üß≠ = "+str(suit_json['processedState']['z']))
        stats.append("–û–∫—Ä—É–∂–∞—é—â–∞—è —Å—Ä–µ–¥–∞:")
        stats.append("–í–ª–∞–∂–Ω–æ—Å—Ç—å üß™ = " +
                    str(suit_json['processedState']['humidity'])+"%")
        stats.append("–ö–∏—Å–ª–æ—Ä–æ–¥ üß™ = " +
                    str(suit_json['processedState']['oxygen'])+"%")
        stats.append("–£–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑ üß™ = " +
                    str(suit_json['processedState']['carbon'])+"%")
        stats.append("–û–∫—Å–∏–¥ –∞–∑–æ—Ç–∞ üß™ = " +
                    str(suit_json['processedState']['nitric'])+"%")
        stats.append("–°–µ—Ä–Ω–∏—Å—Ç—ã–π –∞–Ω–≥–∏–¥—Ä–∏–¥ üß™ = " +
                    str(suit_json['processedState']['sulfurous'])+"%")
        stats.append("–°–µ—Ä–æ–≤–æ–¥–æ—Ä–æ–¥ üß™ = " +
                    str(suit_json['processedState']['hydrogen_sulfide'])+"%")
        stats.append("–ú–µ—Ç–∞–Ω üß™ = "+str(suit_json['processedState']['methane'])+"%")
        stats.append("–£–≥–æ–ª—å–Ω–∞—è –ø—ã–ª—å üß™ = " +
                    str(suit_json['processedState']['dust'])+"%")

        return "\n".join(stats)
    except Exception:
        return "–û—à–∏–±–∫–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"

